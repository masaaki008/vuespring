plugins {
    id 'org.springframework.boot' version '2.7.4'
    id 'io.spring.dependency-management' version '1.0.14.RELEASE'
    id 'java'
    id 'war'
}

group = 'com.tsone'
version = '0.0.1'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.2'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'

    implementation 'com.auth0:java-jwt:4.0.0'

    implementation 'org.postgresql:postgresql:42.5.0'
    implementation 'org.flywaydb:flyway-core:9.4.0'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

task npmRunBuild() {
    doFirst {
        if (!file("${rootDir}/src/vue/node_modules").exists()) {
            "npm.cmd --prefix ${rootDir}/src/vue install ${rootDir}/src/vue"
                .execute()
                .waitForProcessOutput(System.out, System.err)
        } else {
            "npm.cmd --prefix ${rootDir}/src/vue run build"
                .execute()
                .waitForProcessOutput(System.out, System.err)
        }
    }
}

processResources {
    dependsOn npmRunBuild
}
